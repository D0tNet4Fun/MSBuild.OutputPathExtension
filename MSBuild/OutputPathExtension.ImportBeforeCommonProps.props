<!--
***********************************************************************************************
OutputPathExtension.ImportBeforeCommonProps.props

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

***********************************************************************************************
-->

<!--EXTERNAL_PROPERTIES: RootOutputPath;FailIfRootOutputPathNotAvailable;ProjectAssetsFile; -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <Import Project="$(MSBuildThisFileDirectory)OutputPathExtension.props" />

  <!-- define property UsingOutputPathExtension which can be used in scripts to detect if OutputPathExtension is being used -->
  <PropertyGroup>
    <UsingOutputPathExtension>false</UsingOutputPathExtension>
    <UsingOutputPathExtension Condition="'$(RootOutputPath)' != ''" >true</UsingOutputPathExtension>
  </PropertyGroup>

  <PropertyGroup Condition="$(UsingOutputPathExtension)">
    <_RootOutputPathExists Condition="Exists('$(RootOutputPath)')">true</_RootOutputPathExists>
  </PropertyGroup>

  <PropertyGroup Condition="'$(_RootOutputPathExists)' == 'true'">
    <!-- determine $(ProjectBaseOutputPath) which will be used as the path for this project's output -->
    <!-- given ProjectDir is E:\Path\To\Projects\MyProject, then: -->

    <ProjectDirRoot>$([System.IO.Path]::GetPathRoot('$(MSBuildProjectDirectory)'))</ProjectDirRoot>
    <!-- E:\ -->
    <ProjectDirDrive>$(ProjectDirRoot.Substring(0, 1))</ProjectDirDrive>
    <!-- E -->
    <ProjectDirRelativeToRoot>$([MSBuild]::MakeRelative('$(ProjectDirRoot)', '$(MSBuildProjectDirectory)'))</ProjectDirRelativeToRoot>
    <!-- Path\To\Projects\MyProject -->
    <!-- note: this should be identical to MSBuildProjectDirectoryNoRoot but that one is escaped, so not good enough -->

    <ProjectRootOutputPath>$([System.IO.Path]::Combine('$(RootOutputPath)', '$(ProjectDirDrive)', '$(ProjectDirRelativeToRoot)'))</ProjectRootOutputPath>
    <ProjectRootOutputPath Condition="!HasTrailingSlash('$(ProjectRootOutputPath)')">$(ProjectRootOutputPath)\</ProjectRootOutputPath>
    <!-- $(RootOutputPath)\E\Path\To\Projects\MyProject\ -->
  </PropertyGroup>

  <PropertyGroup Condition="'$(_RootOutputPathExists)' == 'true'">
    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' != '' AND !$([System.IO.Path]::IsPathRooted('$(BaseIntermediateOutputPath)'))">$(ProjectRootOutputPath)$(BaseIntermediateOutputPath)</BaseIntermediateOutputPath>
  </PropertyGroup>

  <!-- override MSBuildProjectExtensionsPath that is used by the NuGet targets and whose default value is the obj directory relative to the project directory -->
  <PropertyGroup Condition="'$(MSBuildProjectExtensionsPath)' != ''">
    <MSBuildProjectExtensionsPath>$(BaseIntermediateOutputPath)</MSBuildProjectExtensionsPath>
    <!-- override the initial property to bypass a MSBuild validation that fails the build -->
    <_InitialMSBuildProjectExtensionsPath>$(BaseIntermediateOutputPath)</_InitialMSBuildProjectExtensionsPath>
  </PropertyGroup>

</Project>